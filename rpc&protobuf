#rpc应用和protobuf的学习

##protobuf（protocol buffer）
1. 简介：protobuf是谷歌的一种数据协议，相比较json或者xml来说，protobuf的二进制格式存储空间要小很多，且与语言耦合性小，c、java、python等都有相应的编译工具，互相兼容。在服务器间数据传输十分常用，在分布式系统中尤为适用频繁。
2. 安装：[在github上](https://github.com/google/protobuf/)上找到相对应的语言的版本并下载。解压 tar xzf 包，执行命令进行安装。</br>```./configure和make && make install``` </br>本文以python为例，要安装python的依赖则进入python文件夹进行以下的命令的安装</br>```python setup.py build和python setup.py test```</br>在.bash_profile文件中写入路径.使用```protoc --version```来查看版本号。
3. 使用：先编写test.proto文档,required为必填数据，optional为可选数据。package类似命名空间。syntax是编译器要求加上的版本说明</br>
    
```syntax = "proto2";
    package test;
    message TestMessage
    {
        required int32 m1 = 1;
        optional string m2 = 2;
    }

``` 
然后使用对应的编译器进行编译，编译语句
`protoc --proto_path=「proto文件所在路径」 --  python_out=「生成路径」 「生成文件名称（包含路径）」`    
就可以生成【文件名_pb2.py】文件了，可以直接在python中调用。其中包含两个数据转化的函数，SerializeToString将数据转化  为二进制，ParseFromString方法将二进制转化为对应数据。protobuf有部分rpc的实现，关于编码和解码部分则需要我们手动实现。rpc的proto文件编写例子如下：

```  syntax = "proto2";
  package test;
  message TestMessage
  {
        required int32 m1 = 1;
  }
  service Client
  {
        rpc respond(TestMessage) returns();
  }
  
```
**这部分详细可以看官网或者他人博客。**
##rpc（Remote Procedure Call Protocol）
1. 简介：rpc是远程过程调用的意思，指利用网络在一端应用调用另一端应用的协议。我们常见的网络应用都算做rpc应用。rpc是一类应用的统称协议，可以基于不同的网络协议。如http、tcp、udp等。这里我们需要实现基于protobuf的rpc应用，网络使用socket进行编写。
2. protobuf的rpc的基本架构为
![rpc架构](./rpc_base.jpg)
    

